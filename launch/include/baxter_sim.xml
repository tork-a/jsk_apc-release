<?xml version="1.0" encoding="utf-8"?>
<!-- COPY FROM jsk_2015_05_baxter_apc/launch/baxter_sim.launch -->
<launch>

  <param name="/apc_on_gazebo" type="bool" value="true" />

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="world_name" default="$(find jsk_2015_05_baxter_apc)/worlds/empty_kiva.world"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="shelf_model_path" default="$(find jsk_apc2015_common)"/>

  <!-- We resume the logic in empty_world.launch, changing the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <env name="GAZEBO_MODEL_PATH" value="$(arg shelf_model_path)" />
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
         command="$(find xacro)/xacro.py $(find jsk_2015_05_baxter_apc)/urdf/baxter_sim.xacro" />

  <!-- Load the software version into the ROS Parameter Server -->
  <param name="rethink/software_version" value="1.2.0" />

  <!-- Publish a static transform between the world and the base of the robot -->
  <node pkg="tf" type="static_transform_publisher" name="base_to_world" args="0 0 0 0 0 0 world base 100" />

  <!-- tf for end effector which is required by gazebo plugin for vacuum_gripper -->
  <node name="left_vacuum_gripper_tf_publisher"
        pkg="tf2_ros" type="static_transform_publisher"
        args="0.07 0 0.45 0 0 0 left_wrist left_end_effector" />
  <node name="right_vacuum_gripper_tf_publisher"
        pkg="tf2_ros" type="static_transform_publisher"
        args="0.07 0 0.45 0 0 0 right_wrist right_end_effector" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-param robot_description -urdf -z 0.93 -model baxter
    -J baxter::right_s0 -0.272659
    -J baxter::right_s1 1.04701
    -J baxter::right_e0 -0.00123203
    -J baxter::right_e1 0.49262
    -J baxter::right_w0 -0.0806423
    -J baxter::right_w1 -0.0620532
    -J baxter::right_w2 0.0265941
    -J baxter::left_s0 0.192483
    -J baxter::left_s1 1.047
    -J baxter::left_e0 0.000806359
    -J baxter::left_e1 0.491094
    -J baxter::left_w0 -0.178079
    -J baxter::left_w1 -0.0610333
    -J baxter::left_w2 -0.0124707" />

  <!-- ros_control baxter launch file -->
  <include file="$(find baxter_sim_hardware)/launch/baxter_sdk_control.launch" />

  <!-- kiva pod state tf and urdf param -->
  <include file="$(find jsk_2015_05_baxter_apc)/launch/include/kiva_pod_state.launch" />
  <node name="interactive_adjust_kiva_pod"
        pkg="jsk_interactive_marker" type="marker_6dof">
    <rosparam command="load" file="$(find jsk_2015_05_baxter_apc)/config/kiva_pod_interactive_marker_sim.yaml" />
  </node>

  <!-- setup baxter gazebo -->
  <node pkg="jsk_2015_05_baxter_apc" type="setup_baxter_gazebo.py" name="setup_baxter_gazebo" output="screen" />

</launch>

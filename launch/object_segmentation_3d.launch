<launch>

  <arg name="NODELET_MANAGER" />
  <arg name="INPUT_IMAGE" />
  <arg name="INPUT_CLOUD" />
  <arg name="INPUT_CANDIDATES" />
  <arg name="FIXED_FRAME" />
  <arg name="GPU" default="0" />
  <arg name="BACKEND" default="chainer" />
  <arg name="MODEL_NAME" default="fcn32s" />
  <arg name="MODEL_FILE" default="$(find jsk_apc2016_common)/trained_data/fcn32s_v2_148000.chainermodel"/>
  <arg name="LABEL_YAML" default="$(find jsk_apc2016_common)/config/label_names.yaml"/>
  <arg name="SELECT_LARGEST" default="false" />
  <arg name="USE_PCA" default="false" />
  <arg name="USE_TOPIC" default="false" />
  <arg name="IGNORE_LABELS" default="[]" />
  <rosparam command="load" file="$(arg LABEL_YAML)" ns="label_names" />

  <node name="fcn_object_segmentation"
        pkg="jsk_perception" type="fcn_object_segmentation.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />  <!-- rgb timestamp -->
    <rosparam subst_value="true">
      gpu: $(arg GPU)
      backend: $(arg BACKEND)
      model_name: $(arg MODEL_NAME)
      model_file: $(arg MODEL_FILE)
    </rosparam>
    <remap from="~target_names" to="label_names" />
  </node>
  <group if="$(arg USE_TOPIC)">
    <node name="apply_context_to_label_proba"
          pkg="jsk_perception" type="apply_context_to_label_probability"
          clear_params="true">
      <remap from="~input" to="fcn_object_segmentation/output/proba_image" />
      <remap from="~input/candidates" to="$(arg INPUT_CANDIDATES)" />
      <rosparam>
        use_topic: true
      </rosparam>
    </node>
  </group>
  <group unless="$(arg USE_TOPIC)">
    <node name="apply_context_to_label_proba"
          pkg="jsk_perception" type="apply_context_to_label_probability"
          clear_params="true">
      <remap from="~input" to="fcn_object_segmentation/output/proba_image" />
      <rosparam>
        use_topic: false
      </rosparam>
    </node>
  </group>

  <node name="resize_label"
        pkg="nodelet" type="nodelet"
        args="load image_proc/resize $(arg NODELET_MANAGER)">
    <remap from="image" to="apply_context_to_label_proba/output/label" />
    <rosparam>
      interpolation: 0
      scale_height: 0.5
      scale_width: 0.5
    </rosparam>
  </node>

  <!-- label -> cluster indices -->
  <group if="$(arg SELECT_LARGEST)">
    <node name="label_to_cluster_indices"
          pkg="nodelet" type="nodelet"
          args="load jsk_pcl_utils/LabelToClusterPointIndices $(arg NODELET_MANAGER)">
      <remap from="~input" to="resize_label/image" />
      <rosparam subst_value="true">
        bg_label: -1
        ignore_labels: $(arg IGNORE_LABELS)
      </rosparam>
    </node>
    <node name="resize_points_publisher_label"
          pkg="nodelet" type="nodelet"
          args="standalone jsk_pcl/ResizePointsPublisher">
      <remap from="~input" to="$(arg INPUT_CLOUD)" />
      <rosparam>
        step_x: 2
        step_y: 2
      </rosparam>
    </node>
    <node name="cluster_indices_decomposer_label"
          pkg="nodelet" type="nodelet"
          args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg NODELET_MANAGER)">
      <remap from="~input" to="resize_points_publisher_label/output" />
      <remap from="~target" to="label_to_cluster_indices/output" />
      <rosparam>
        approximate_sync: true
        queue_size: 100
        sort_by: -cloud_size
      </rosparam>
    </node>
  </group>

  <!-- label -> mask -> indices -> cloud -> resized cloud  -> cluster indices -->
  <node name="label_to_mask"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/LabelToMaskImage $(arg NODELET_MANAGER)">
    <remap from="~input" to="apply_context_to_label_proba/output/label" />  <!-- rgb timestamp -->
  </node>
  <node name="mask_to_point_indices"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/MaskImageToPointIndices $(arg NODELET_MANAGER)">
    <remap from="~input" to="label_to_mask/output" />  <!-- rgb timestamp -->
  </node>
  <node name="extract_indices_target_label"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg NODELET_MANAGER)">
    <remap from="~input" to="$(arg INPUT_CLOUD)" />  <!-- depth timestamp -->
    <remap from="~indices" to="mask_to_point_indices/output" />  <!-- rgb timestamp -->
    <rosparam>
      approximate_sync: true
      queue_size: 100
      keep_organized: true
    </rosparam>
  </node>
  <node name="resize_points_publisher_target"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ResizePointsPublisher $(arg NODELET_MANAGER)">
    <remap from="~input" to="extract_indices_target_label/output" />  <!-- depth timestamp -->
    <rosparam>
      step_x: 2
      step_y: 2
    </rosparam>
  </node>
  <node name="euclidean_clustering"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/EuclideanClustering $(arg NODELET_MANAGER)">
    <remap from="~input" to="resize_points_publisher_target/output" />  <!-- depth timestamp -->
    <rosparam>
      min_size: 10
      max_size: 10000
      tolerance: 0.05
    </rosparam>
  </node>
  <node name="cluster_indices_decomposer_target"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg NODELET_MANAGER)">
    <remap from="~input" to="resize_points_publisher_target/output" />  <!-- depth timestamp -->
    <remap from="~target" to="euclidean_clustering/output" />  <!-- depth timestamp -->
    <rosparam subst_value="true">
      approximate_sync: false
      queue_size: 100
      sort_by: -cloud_size
      align_boxes: true
      align_boxes_with_plane: false
      use_pca: $(arg USE_PCA)
      target_frame_id: $(arg FIXED_FRAME)
    </rosparam>
  </node>

  <!-- Visualization -->
  <node name="label_image_decomposer"
        pkg="jsk_perception" type="label_image_decomposer.py">
    <remap from="~input" to="$(arg INPUT_IMAGE)" />
    <remap from="~input/label" to="apply_context_to_label_proba/output/label" />
    <remap from="~label_names" to="label_names" />
    <rosparam>
      approximate_sync: true
      queue_size: 100
    </rosparam>
  </node>
  <node name="poses_to_pose_target0"
        pkg="jsk_recognition_utils" type="pose_array_to_pose.py">
    <remap from="~input" to="cluster_indices_decomposer_target/centroid_pose_array" />
    <rosparam>
      index: 0
    </rosparam>
  </node>
  <node name="bboxes_to_bbox_target0"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/BoundingBoxArrayToBoundingBox $(arg NODELET_MANAGER)">
    <remap from="~input" to="cluster_indices_decomposer_target/boxes" />
    <rosparam>
      index: 0
    </rosparam>
  </node>
  <node name="cluster_indices_to_indices_target0"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl_utils/ClusterPointIndicesToPointIndices $(arg NODELET_MANAGER)">
    <remap from="~input" to="cluster_indices_decomposer_target/cluster_indices" />
    <rosparam>
      index: 0
    </rosparam>
  </node>
  <node name="extract_indices_target0"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/ExtractIndices $(arg NODELET_MANAGER)">
    <remap from="~input" to="resize_points_publisher_target/output" />
    <remap from="~indices" to="cluster_indices_to_indices_target0/output" />
  </node>

</launch>
